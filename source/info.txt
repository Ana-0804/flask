--mkdir backend
--cd bacckend
--installed poetry (pip install poetry ) for depemdency management
--poetry init  # to create pyproject.toml file
--poetry add Flask


In root folder we have 
a documentation (README.md) and a LICENSE file, which is MIT license.

The project structure:
- README.md : A brief description of the project.
- a tests folder with unit test . 
- Setup.py with the configuration to mpackage and deploy  the application as python package.
- Poetry.lock : It's generated by Poetry when you run `poetry lock`. This file contains exact versions of all dependencies that were 
  in project
- And a Root package  is init.py where all module are imported. Here is where i created Flask application.

I can also have some modules at root level , as the configuration,the inner package and main.py file to run the application .
The alternative to main.py is to run the app directly with Flask Command.

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

To create and configure the Flak application we begin with  this code on the __init__.py file:

from flask import Flask
def  create_app():
    app = Flask(__name__)
    return app

Logging in, the database,static variable can also  be configured here.
Then you will need to create routes in   /routes/blueprints.py files.

##After this create __main.py__ file that call the function create_app() from __init__.py and run it.

For example:
python -m backend


 app.run(host ="127.0.0.1")
Host Parameter is from wheere the requests are accepted. By default its localhost but if you want to accept request from any device use "0.0.0.0" , port=5000 -> This line open the server on local machine at

This command allow us to access our server from any device connected to internet using IP address "localhost" .


##Next I have created endpoint to request

##Now to start the app we will first enter into poetry shell  using:
$ poetry shell
and the run the module

